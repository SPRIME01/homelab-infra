---
- name: Configure SSH hardening
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0600'
    validate: '/usr/sbin/sshd -t -f %s'
  notify: restart ssh
  when: ansible_os_family == "Debian" and harden_ssh | bool

- name: Configure SSH hardening in sshd_config.d
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config.d/hardening.conf
    owner: root
    group: root
    mode: '0644'
    validate: '/usr/sbin/sshd -t -f %s'
  notify: restart ssh
  when: ansible_os_family == "Debian" and harden_ssh | bool

- name: Set password policies
  template:
    src: pwquality.conf.j2
    dest: /etc/security/pwquality.conf
    owner: root
    group: root
    mode: '0644'
  when: ansible_os_family == "Debian" and harden_passwords | bool

- name: Configure system limits
  template:
    src: limits.conf.j2
    dest: /etc/security/limits.conf
    owner: root
    group: root
    mode: '0644'
    force: false
  check_mode: true
  register: limits_check
  when: ansible_os_family == "Debian"

- name: Apply system limits if needed
  template:
    src: limits.conf.j2
    dest: /etc/security/limits.conf
    owner: root
    group: root
    mode: '0644'
  when: ansible_os_family == "Debian" and limits_check.changed

- name: Disable core dumps
  lineinfile:
    path: /etc/security/limits.conf
    regexp: '^[*]\s+hard\s+core'
    line: "* hard core 0"
    state: present
  when: ansible_os_family == "Debian" and disable_core_dumps | bool

- name: Create testuser
  user:
    name: testuser
    groups: sudo,docker
    append: true
    state: present
  when: ansible_os_family == "Debian"

- name: Log SSH configuration status
  ansible.builtin.debug:
    msg: "SSH configuration status: {{ sshd_config }}"

- name: Validate SSH configuration
  ansible.builtin.assert:
    that:
      - sshd_config is defined
    fail_msg: "SSH configuration failed"

- name: Log password policy configuration status
  ansible.builtin.debug:
    msg: "Password policy configuration status: {{ pwquality_conf }}"

- name: Validate password policy configuration
  ansible.builtin.assert:
    that:
      - pwquality_conf is defined
    fail_msg: "Password policy configuration failed"
